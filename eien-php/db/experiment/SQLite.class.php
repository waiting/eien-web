<?php/**	SQLite数据库驱动程序	@author WT	@version 1.0.0 */class SQLiteConnection implements IDBConnection{	public function __construct( $filename, $user, $pwd )	{	}	public function __destruct()	{		$this->close();	}	/**	@brief 连接数据库		@return boolean */	function connect();	/**	@brief 关闭连接		@return boolean */	function close();	/**	@brief 选定要操作的数据库		@param $database string 数据库名		@return boolean 是否成功 */	function selectDB($database);	/**	@brief 设置连接校验字符集		@param $charset string 字符集		@pre 连接数据库之后		@return boolean */	function setLinkCharset($charset);	/**	@brief 受影响的行数		@pre 在改变数据库内容或结构之后		@return int */	function affectedRows();	/**	@brief 创建一个库		@param $database string 数据库名		@return boolean */	function createDB($database);	/**	@brief 删除数据库		@param $database string 数据库名		@return boolean */	function dropDB($database);	/**	@brief 获得错误号		@return int		@retval 0 没有错误		@retval 非0 出错,可用 \b error 查看错误信息 */	function errno();	/**	@brief 获得错误信息		@return string		@retval NULL 没有错误 */	function error();	/**	@brief 查询		@param $sql string		@return IDBResult */	function query($sql);	/**	@brief 直接查询		@param $sql string		@return resource */	function directQuery($sql);	/**	@brief 未建立缓冲区的查询		这函数可以用来执行INSERT, UPDATE, DROP等等一些不需要查询数据的操作.		@param $sql string		@return resource */	function unbufferedQuery($sql);	/**	@brief 获得最后一次完成记录插入时的ID值.		您可以用执行SQL里的LAST_INSERT_ID()代替此函数		@return int */	function insertID();	/**	@brief 普通文本转成SQL语句安全的文本,用做SQL语句的字符串.		@param $str string 需要换码的字符串		@return string */	function escape($str);	/**	@brief 获得所有数据库的一个结果集		@return IDBResult */	function listDBs();	/**	@brief 获得数据库里某表所有字段的一个结果集		@param $table_name string		@return IDBResult */	function listFields($table_name);	/**	@brief 获得数据库里所有表的一个结果集		@return IDBResult */	function listTables();	/**	@brief 获得数据库表名的引用标记		@return array 两个元素分别表示左右俩标记 */	function tableQuotes();}