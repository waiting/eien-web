<?php# 配置需要包含的模块和一些参数if (!defined('IN_EIEN')) exit("No in eien framework");$eien_module_paths = array('EIEN_FILE_CLASS'      => EIEN_PATH.'file/file.class.php','EIEN_VARSFILE_CLASS'  => EIEN_PATH.'file/varsfile.class.php','EIEN_DB_CLASS'        => EIEN_PATH.'db/db.class.php','EIEN_SQLSCRIPT_CLASS' => EIEN_PATH.'db/sqlscript.class.php','EIEN_SQLBACKUP_CLASS' => EIEN_PATH.'db/sqlbackup.class.php','EIEN_DEBUGLOG'        => EIEN_PATH.'debug/debuglog.php','EIEN_GD_CLASS'        => EIEN_PATH.'gd/gd.class.php','EIEN_HTTP_CLASS'      => EIEN_PATH.'http/http.class.php','EIEN_SESSION_CLASS'   => EIEN_PATH.'session/session.class.php','EIEN_SETTINGS_CLASS'  => EIEN_PATH.'settings/settings.class.php','EIEN_WORDLIB_CLASS'   => EIEN_PATH.'wordlib/wordlib.class.php','EIEN_TAG_CLASS'       => EIEN_PATH.'tag/tag.class.php','EIEN_UBBTAG_CLASS'    => EIEN_PATH.'ubb/ubbtag.class.php','EIEN_HTMLTAG_CLASS'   => EIEN_PATH.'html/htmltag.class.php','EIEN_TEMPLATE_CLASS'  => EIEN_PATH.'template/template.class.php','EIEN_SQLTPL_CLASS'    => EIEN_PATH.'template/sqltpl.class.php',);// 模块包含 0不包含, 非0包含$eien_modules = array(// 文件'EIEN_FILE_CLASS'      => 1,// PHP纯变量文件'EIEN_VARSFILE_CLASS'  => 1,// 数据库'EIEN_DB_CLASS'        => 1,'EIEN_SQLSCRIPT_CLASS' => 1,'EIEN_SQLBACKUP_CLASS' => 1,// 调试'EIEN_DEBUGLOG'        => 1,// GD库'EIEN_GD_CLASS'        => 1,// HTTP相关'EIEN_HTTP_CLASS'      => 1,// Session'EIEN_SESSION_CLASS'   => 1,// Settings'EIEN_SETTINGS_CLASS'  => 1,// WordLib'EIEN_WORDLIB_CLASS'   => 1,// Tags'EIEN_TAG_CLASS'       => 1,'EIEN_UBBTAG_CLASS'    => 1,'EIEN_HTMLTAG_CLASS'   => 1,'EIEN_TEMPLATE_CLASS'  => 1,'EIEN_SQLTPL_CLASS'    => 1,);// 包含模块foreach ($eien_modules as $module => $enable){	if (!$enable) continue;	switch ($module)	{	case 'EIEN_FILE_CLASS':		break;	case 'EIEN_VARSFILE_CLASS':		break;	case 'EIEN_DB_CLASS':		break;	case 'EIEN_SQLSCRIPT_CLASS':		if (!defined('EIEN_FILE_CLASS')) require_once $eien_module_paths['EIEN_FILE_CLASS'];		if (!defined('EIEN_DB_CLASS')) require_once $eien_module_paths['EIEN_DB_CLASS'];		break;	case 'EIEN_SQLBACKUP_CLASS':		if (!defined('EIEN_FILE_CLASS')) require_once $eien_module_paths['EIEN_FILE_CLASS'];		if (!defined('EIEN_DB_CLASS')) require_once $eien_module_paths['EIEN_DB_CLASS'];		if (!defined('EIEN_SQLSCRIPT_CLASS')) require_once $eien_module_paths['EIEN_SQLSCRIPT_CLASS'];		break;	case 'EIEN_DEBUGLOG':		if (!defined('EIEN_FILE_CLASS')) require_once $eien_module_paths['EIEN_FILE_CLASS'];		break;	case 'EIEN_GD_CLASS':		break;	case 'EIEN_HTTP_CLASS':		break;	case 'EIEN_SESSION_CLASS':		if (!defined('EIEN_DB_CLASS')) require_once $eien_module_paths['EIEN_DB_CLASS'];		break;	case 'EIEN_SETTINGS_CLASS':		if (!defined('EIEN_DB_CLASS')) require_once $eien_module_paths['EIEN_DB_CLASS'];		break;	case 'EIEN_WORDLIB_CLASS':		break;	case 'EIEN_TAG_CLASS':		break;	case 'EIEN_UBBTAG_CLASS':		if (!defined('EIEN_TAG_CLASS')) require_once $eien_module_paths['EIEN_TAG_CLASS'];		break;	case 'EIEN_HTMLTAG_CLASS':		if (!defined('EIEN_TAG_CLASS')) require_once $eien_module_paths['EIEN_TAG_CLASS'];		break;	case 'EIEN_TEMPLATE_CLASS':		if (!defined('EIEN_TAG_CLASS')) require_once $eien_module_paths['EIEN_TAG_CLASS'];		break;	}	if (!defined($module))	{		require_once $eien_module_paths[$module];	}}// 加载的模块function loaded_modules(){	global $eien_modules;	$loaded = array();	foreach ($eien_modules as $m => $enable)	{		if (defined($m)) $loaded[] = $m;	}	return $loaded;}?>